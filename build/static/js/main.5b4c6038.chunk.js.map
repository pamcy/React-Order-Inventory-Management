{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Fish.js","sample-fishes.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","storeInput","React","createRef","handleSubmit","e","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","action","className","onClick","this","type","placeholder","ref","defaultValue","required","Component","Header","tagline","Order","renderOrder","id","count","order","fish","fishes","isAvailable","status","transitionOptions","key","timeout","enter","exit","classNames","react_transition_group","component","name","removeFromOrder","price","_this2","orderIDs","Object","keys","total","reduce","sum","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","onSubmit","EditFishForm","handleInputChange","updatedFish","objectSpread","details","defineProperty","updateFish","_this$props$details","onChange","removeFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","process","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","isLoading","handleAuth","_callee","authData","store","regenerator_default","wrap","_context","prev","next","console","log","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logOut","_callee2","_context2","signOut","onAuthStateChanged","_this3","logOutButton","marginBottom","item","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","Fish","src","alt","disabled","addToOrder","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","App","Date","now","updatedInfo","sampleFishes","params","match","localStorageValue","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"gPAAO,SAASA,EAAYC,GAC1B,OAAQA,EAAQ,KAAKC,eAAe,QAAS,CAC3CC,MAAO,WACPC,SAAU,QAIP,SAASC,EAAMC,GACpB,OAAOA,EAAIC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,SAcrC,SAASC,IACd,IAAMC,EAAa,CACjB,WACA,YACA,QACA,OACA,UACA,QACA,YACA,WACA,OACA,cACA,gBACA,QACA,SACA,YACA,UACA,YACA,QACA,aACA,SACA,WACA,cACA,SACA,SACA,WACA,QACA,UACA,OACA,aACA,UACA,YACA,UACA,YACA,QACA,cACA,UACA,WAoCF,SAAAC,OAAUR,EAAMO,GAAhB,KAAAC,OAA+BR,EAAMO,GAArC,KAAAC,OAAoDR,EAjCtC,CACZ,QACA,MACA,WACA,QACA,OACA,SACA,SACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,WACA,WACA,QACA,OACA,QACA,SACA,aACA,WACA,YACA,QACA,SACA,SACA,YACA,WACA,cClDWS,6MApCbC,WAAaC,IAAMC,cAMnBC,aAAe,SAAAC,GAEbA,EAAEC,iBAGF,IAAMC,EAAYC,EAAKP,WAAWQ,QAAQC,MAK1CF,EAAKG,MAAMC,QAAQC,KAAnB,UAAAd,OAAkCQ,6EAIlC,OACEO,EAAAC,EAAAC,cAAA,QAAMC,OAAO,GAAGC,UAAU,iBAAiBC,QAASC,KAAKhB,cACvDU,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SACEK,KAAK,OACLC,YAAY,qBACZC,IAAKH,KAAKnB,WACVuB,aAAc3B,IACd4B,UAAQ,IAEVX,EAAAC,EAAAC,cAAA,UAAQK,KAAK,UAAb,8BAhCkBnB,IAAMwB,2BCmBjBC,EApBA,SAAAhB,GAAK,OAClBG,EAAAC,EAAAC,cAAA,UAAQE,UAAU,OAChBJ,EAAAC,EAAAC,cAAA,kBAEEF,EAAAC,EAAAC,cAAA,QAAME,UAAU,SACdJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,MAAhB,MACAJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,OAAhB,QAJJ,OAQAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,WACZJ,EAAAC,EAAAC,cAAA,YAAOL,EAAMiB,oBC6EJC,6MA/EbC,YAAc,SAAAC,GACZ,IAAMC,EAAQxB,EAAKG,MAAMsB,MAAMF,GACzBG,EAAO1B,EAAKG,MAAMwB,OAAOJ,GACzBK,EAAcF,GAAwB,cAAhBA,EAAKG,OAC3BC,EAAoB,CACxBC,IAAKR,EACLS,QAAS,CAAEC,MAAO,IAAKC,KAAM,KAC7BC,WAAY,SAGd,OAAKT,EAEAE,EAYHtB,EAAAC,EAAAC,cAAC4B,EAAA,cAAkBN,EACjBxB,EAAAC,EAAAC,cAAA,MAAIuB,IAAKR,GACPjB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC4B,EAAA,gBAAD,CAAiBC,UAAU,OAAO3B,UAAU,SAE1CJ,EAAAC,EAAAC,cAAC4B,EAAA,cAAD,CACEL,IAAKP,EACLQ,QAAS,CAAEC,MAAO,IAAKC,KAAM,KAC7BC,WAAW,SAEX7B,EAAAC,EAAAC,cAAA,YAAOgB,KARb,OAWOE,EAAKY,KACVhC,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAMX,EAAKG,MAAMoC,gBAAgBhB,KAAlD,SAIFjB,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAAShC,EAAYgD,EAAKc,MAAQhB,MA5BpDlB,EAAAC,EAAAC,cAAC4B,EAAA,cAAkBN,EACjBxB,EAAAC,EAAAC,cAAA,MAAIuB,IAAKR,GAAT,UACUG,EAAOA,EAAKY,KAAO,OAD7B,6BALY,8EAsCX,IAAAG,EAAA7B,KACD8B,EAAWC,OAAOC,KAAKhC,KAAKT,MAAMsB,OAClCoB,EAAQH,EAASI,OAAO,SAACC,EAAKxB,GAClC,IAAMC,EAAQiB,EAAKtC,MAAMsB,MAAMF,GACzBG,EAAOe,EAAKtC,MAAMwB,OAAOJ,GAG/B,OAFoBG,GAAwB,cAAhBA,EAAKG,OAGxBkB,EAAMvB,EAAQE,EAAKc,MAGrBO,GAGN,GAEH,OACEzC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAC4B,EAAA,gBAAD,CAAiBC,UAAU,KAAK3B,UAAU,SACvCgC,EAASM,IAAIpC,KAAKU,cAErBhB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,wBACC9B,EAAYmE,YA/EHnD,IAAMwB,6DC0DX+B,oNA3DbC,QAAUxD,IAAMC,cAChBwD,SAAWzD,IAAMC,cACjByD,UAAY1D,IAAMC,cAClB0D,QAAU3D,IAAMC,cAChB2D,SAAW5D,IAAMC,cAMjB4D,WAAa,SAAA1D,GACXA,EAAEC,iBAEF,IAAM4B,EAAO,CACXY,KAAMtC,EAAKkD,QAAQjD,QAAQC,MAC3BsC,MAAOgB,WAAWxD,EAAKmD,SAASlD,QAAQC,OACxC2B,OAAQ7B,EAAKoD,UAAUnD,QAAQC,MAC/BuD,KAAMzD,EAAKqD,QAAQpD,QAAQC,MAC3BwD,MAAO1D,EAAKsD,SAASrD,QAAQC,OAG/BF,EAAKG,MAAMwD,QAAQjC,GAGnB7B,EAAE+D,cAAcC,iFAIhB,OACEvD,EAAAC,EAAAC,cAAA,QAAME,UAAU,YAAYoD,SAAUlD,KAAK2C,YACzCjD,EAAAC,EAAAC,cAAA,SAAO8B,KAAK,OAAOvB,IAAKH,KAAKsC,QAASrC,KAAK,OAAOC,YAAY,SAC9DR,EAAAC,EAAAC,cAAA,SACE8B,KAAK,QACLvB,IAAKH,KAAKuC,SACVtC,KAAK,OACLC,YAAY,UAEdR,EAAAC,EAAAC,cAAA,UACE8B,KAAK,SACLvB,IAAKH,KAAKwC,UACVvC,KAAK,OACLC,YAAY,UAEZR,EAAAC,EAAAC,cAAA,UAAQN,MAAM,aAAd,UACAI,EAAAC,EAAAC,cAAA,UAAQN,MAAM,eAAd,cAEFI,EAAAC,EAAAC,cAAA,YAAU8B,KAAK,OAAOvB,IAAKH,KAAKyC,QAASvC,YAAY,gBACrDR,EAAAC,EAAAC,cAAA,SACE8B,KAAK,QACLvB,IAAKH,KAAK0C,SACVzC,KAAK,OACLC,YAAY,cAEdR,EAAAC,EAAAC,cAAA,UAAQK,KAAK,UAAb,sBAtDkBnB,IAAMwB,YCuEjB6C,6MArDbC,kBAAoB,SAAAnE,GAClB,IAAMoE,EAAWtB,OAAAuB,EAAA,EAAAvB,CAAA,GACZ3C,EAAKG,MAAMgE,QADCxB,OAAAyB,EAAA,EAAAzB,CAAA,GAEd9C,EAAE+D,cAActB,KACU,UAAzBzC,EAAE+D,cAActB,KACZkB,WAAW3D,EAAE+D,cAAc1D,OAC3BL,EAAE+D,cAAc1D,QAGxBF,EAAKG,MAAMkE,WAAWrE,EAAKG,MAAMoB,GAAI0C,4EAG9B,IAAAxB,EAAA7B,KAAA0D,EACsC1D,KAAKT,MAAMgE,QAAhD7B,EADDgC,EACChC,KAAME,EADP8B,EACO9B,MAAOX,EADdyC,EACczC,OAAQ4B,EADtBa,EACsBb,KAAMC,EAD5BY,EAC4BZ,MAEnC,OACEpD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,SACE8B,KAAK,OACLzB,KAAK,OACLX,MAAOoC,EACPiC,SAAU3D,KAAKoD,oBAEjB1D,EAAAC,EAAAC,cAAA,SACE8B,KAAK,QACLzB,KAAK,OACLX,MAAOsC,EACP+B,SAAU3D,KAAKoD,oBAEjB1D,EAAAC,EAAAC,cAAA,UACE8B,KAAK,SACLzB,KAAK,OACLX,MAAO2B,EACP0C,SAAU3D,KAAKoD,mBAEf1D,EAAAC,EAAAC,cAAA,UAAQN,MAAM,aAAd,UACAI,EAAAC,EAAAC,cAAA,UAAQN,MAAM,eAAd,cAEFI,EAAAC,EAAAC,cAAA,YAAU8B,KAAK,OAAOpC,MAAOuD,EAAMc,SAAU3D,KAAKoD,oBAClD1D,EAAAC,EAAAC,cAAA,SACE8B,KAAK,QACLzB,KAAK,OACLX,MAAOwD,EACPa,SAAU3D,KAAKoD,oBAEjB1D,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAM8B,EAAKtC,MAAMqE,WAAW/B,EAAKtC,MAAMoB,MAAxD,uBA/DmB7B,IAAMwB,WC6BlBuD,EA7BD,SAAAtE,GAAK,OACjBG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,sDACAF,EAAAC,EAAAC,cAAA,UACEE,UAAU,SACVC,QAAS,kBAAMR,EAAMuE,aAAa,YAFpC,sBAMApE,EAAAC,EAAAC,cAAA,UACEE,UAAU,UACVC,QAAS,kBAAMR,EAAMuE,aAAa,aAFpC,uBAMApE,EAAAC,EAAAC,cAAA,UACEE,UAAU,WACVC,QAAS,kBAAMR,EAAMuE,aAAa,cAFpC,2CCdEC,SAAcC,IAASC,cAAc,CACzCC,OAAQC,0CACRC,WAAY,0CACZC,YAAa,oDAUAC,EANFC,IAAOC,YAAYT,EAAYU,YC8H7BC,6MAxHbC,MAAQ,CACNC,IAAK,KACLC,MAAO,KACPC,WAAW,KAiBbC,iDAAa,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAC,EAAAxF,EAAAyF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACXC,QAAQC,IAAIR,GADDI,EAAAE,KAAA,EAISjB,EAAKoB,MAAL,GAAA/G,OAAcS,EAAKG,MAAMoG,SAAW,CACtDC,QAAQ7D,OAAA8D,EAAA,EAAA9D,QAAA8D,EAAA,EAAA9D,CAAA3C,MALC,WAIL8F,EAJKG,EAAAS,MASAjB,MATA,CAAAQ,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAUHjB,EAAKyB,KAAL,GAAApH,OAAaS,EAAKG,MAAMoG,QAAxB,UAAyC,CAC7CK,KAAMf,EAASgB,KAAKrB,MAXb,OAgBXxF,EAAK8G,SAAS,CACZtB,IAAKK,EAASgB,KAAKrB,IACnBC,MAAOK,EAAML,OAASI,EAASgB,KAAKrB,IACpCE,WAAW,IAnBF,wBAAAO,EAAAc,SAAAnB,8DA2BblB,aAAe,SAAAsC,GAGb,IAAMC,EAAe,IAAIrC,IAASsC,KAAT,GAAA3H,OAAiByH,EAAjB,kBAGzBrC,EACGuC,OACAC,gBAAgBF,GAChBG,KAAKpH,EAAK2F,eAGf0B,4BAAS,SAAAC,IAAA,OAAAvB,EAAAxF,EAAAyF,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EACDvB,IAASsC,OAAOM,UADf,OAIPxH,EAAK8G,SAAS,CAAEtB,IAAK,OAJd,wBAAA+B,EAAAR,SAAAO,yFArDW,IAAA7E,EAAA7B,KAClBA,KAAKkG,SAAS,CAAEpB,WAAW,IAI3Bd,IAASsC,OAAOO,mBAAmB,SAAAZ,GAC7BA,EACFpE,EAAKkD,WAAW,CAAEkB,SAElBpE,EAAKqE,SAAS,CAAEpB,WAAW,uCAmDxB,IAAAgC,EAAA9G,KACD+G,EACJrH,EAAAC,EAAAC,cAAA,UAAQ3B,MAAO,CAAE+I,aAAc,IAAMjH,QAASC,KAAKyG,QAAnD,WAMF,OAAIzG,KAAK2E,MAAMG,UAEXpF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAMhBE,KAAK2E,MAAMC,IAKZ5E,KAAK2E,MAAMC,MAAQ5E,KAAK2E,MAAME,MAE9BnF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,gDACCmH,GAOLrH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,uBACCmH,EACAhF,OAAOC,KAAKhC,KAAKT,MAAMwB,QAAQqB,IAAI,SAAA6E,GAAI,OACtCvH,EAAAC,EAAAC,cAACsH,EAAD,CACE/F,IAAK8F,EACLtG,GAAIsG,EACJ1D,QAASuD,EAAKvH,MAAMwB,OAAOkG,GAC3BxD,WAAYqD,EAAKvH,MAAMkE,WACvBG,WAAYkD,EAAKvH,MAAMqE,eAG3BlE,EAAAC,EAAAC,cAACuH,EAAD,CAAapE,QAAS/C,KAAKT,MAAMwD,UACjCrD,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAcC,QAASC,KAAKT,MAAM6H,kBAApD,uBA5BK1H,EAAAC,EAAAC,cAACyH,EAAD,CAAOvD,aAAc9D,KAAK8D,sBA7FfhF,IAAMwB,WC+BfgH,mLAvBJ,IAAAlI,EAAAY,KAAA0D,EACsC1D,KAAKT,MAAMgE,QAAhDT,EADDY,EACCZ,MAAOD,EADRa,EACQb,KAAMnB,EADdgC,EACchC,KAAME,EADpB8B,EACoB9B,MACrBZ,EAAyB,cAFxB0C,EAC2BzC,OAGlC,OACEvB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACZJ,EAAAC,EAAAC,cAAA,OAAK2H,IAAKzE,EAAO0E,IAAK9F,IACtBhC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACX4B,EACDhC,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAAShC,EAAY8D,KAEvClC,EAAAC,EAAAC,cAAA,SAAIiD,GACJnD,EAAAC,EAAAC,cAAA,UACE6H,UAAWzG,EACXjB,QAAS,kBAAMX,EAAKG,MAAMmI,WAAWtI,EAAKG,MAAMoB,MAE/CK,EAAc,eAAiB,qBA7BvBlC,IAAMwB,WC+EVS,EAlFA,CACb4G,MAAO,CACLjG,KAAM,kBACNoB,MAAO,mBACPD,KACE,wFACFjB,MAAO,KACPX,OAAQ,aAGV2G,MAAO,CACLlG,KAAM,UACNoB,MAAO,sBACPD,KACE,iFACFjB,MAAO,KACPX,OAAQ,aAGV4G,MAAO,CACLnG,KAAM,eACNoB,MAAO,uBACPD,KACE,qGACFjB,MAAO,KACPX,OAAQ,eAGV6G,MAAO,CACLpG,KAAM,YACNoB,MAAO,mBACPD,KACE,kGACFjB,MAAO,KACPX,OAAQ,aAGV8G,MAAO,CACLrG,KAAM,YACNoB,MAAO,mBACPD,KACE,2EACFjB,MAAO,KACPX,OAAQ,aAGV+G,MAAO,CACLtG,KAAM,kBACNoB,MAAO,qBACPD,KACE,0GACFjB,MAAO,KACPX,OAAQ,aAGVgH,MAAO,CACLvG,KAAM,UACNoB,MAAO,sBACPD,KAAM,oEACNjB,MAAO,KACPX,OAAQ,aAGViH,MAAO,CACLxG,KAAM,UACNoB,MAAO,sBACPD,KACE,sFACFjB,MAAO,IACPX,OAAQ,aAGVkH,MAAO,CACLzG,KAAM,eACNoB,MAAO,qBACPD,KACE,8FACFjB,MAAO,KACPX,OAAQ,cC+EGmH,6MApJbzD,MAAQ,CACN5D,OAAQ,GACRF,MAAO,MAuCTkC,QAAU,SAAAjC,GAER,IAAMC,EAAMgB,OAAAuB,EAAA,EAAAvB,CAAA,GAAQ3C,EAAKuF,MAAM5D,QAG/BA,EAAM,OAAApC,OAAQ0J,KAAKC,QAAWxH,EAG9B1B,EAAK8G,SAAS,CACZnF,cAIJ0C,WAAa,SAAC9C,EAAI4H,GAEhB,IAAMxH,EAAMgB,OAAAuB,EAAA,EAAAvB,CAAA,GACP3C,EAAKuF,MAAM5D,OADJgB,OAAAyB,EAAA,EAAAzB,CAAA,GAETpB,EAAK4H,IAORnJ,EAAK8G,SAAS,CAAEnF,cAGlB6C,WAAa,SAAAjD,GACX,IAAMI,EAAMgB,OAAAuB,EAAA,EAAAvB,CAAA,GACP3C,EAAKuF,MAAM5D,OADJgB,OAAAyB,EAAA,EAAAzB,CAAA,GAETpB,EAAK,OAORvB,EAAK8G,SAAS,CAAEnF,WAEhB,IAAMF,EAAKkB,OAAAuB,EAAA,EAAAvB,CAAA,GAAQ3C,EAAKuF,MAAM9D,cACvBA,EAAMF,GACbvB,EAAK8G,SAAS,CAAErF,aAGlB6G,WAAa,SAAA/G,GAEX,IAAME,EAAKkB,OAAAuB,EAAA,EAAAvB,CAAA,GAAQ3C,EAAKuF,MAAM9D,OAK9BA,EAAMF,GAAME,EAAMF,GAAM,GAAK,EAG7BvB,EAAK8G,SAAS,CACZrF,aAIJc,gBAAkB,SAAAhB,GAChB,IAAME,EAAKkB,OAAAuB,EAAA,EAAAvB,CAAA,GAAQ3C,EAAKuF,MAAM9D,cAEvBA,EAAMF,GACbvB,EAAK8G,SAAS,CAAErF,aAGlBuG,iBAAmB,WACjBhI,EAAK8G,SAAS,CACZnF,OAAQyH,wFAhGQ,IACVC,EAAWzI,KAAKT,MAAMmJ,MAAtBD,OACFE,EAAoBC,aAAaC,QAAQJ,EAAO9C,SAElDgD,GACF3I,KAAKkG,SAAS,CACZrF,MAAOiI,KAAKC,MAAMJ,KAItB3I,KAAKG,IAAMmE,EAAK0E,UAAL,GAAArK,OAAkB8J,EAAO9C,QAAzB,WAA2C,CACpDC,QAAS5F,KACT2E,MAAO,wDAIU,IACX8D,EAAWzI,KAAKT,MAAMmJ,MAAtBD,OAGRG,aAAaK,QAAQR,EAAO9C,QAASmD,KAAKI,UAAUlJ,KAAK2E,MAAM9D,uDAK/DyD,EAAK6E,cAAcnJ,KAAKG,sCA2EjB,IAAA0B,EAAA7B,KACP,OACEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAACwJ,EAAD,CAAQ5I,QAAQ,yBAChBd,EAAAC,EAAAC,cAAA,MAAIE,UAAU,kBAEXiC,OAAOC,KAAKhC,KAAK2E,MAAM5D,QAAQqB,IAAI,SAAA6E,GAAI,OACtCvH,EAAAC,EAAAC,cAACyJ,EAAD,CACElI,IAAK8F,EACLtG,GAAIsG,EACJ1D,QAAS1B,EAAK8C,MAAM5D,OAAOkG,GAC3BS,WAAY7F,EAAK6F,iBAKzBhI,EAAAC,EAAAC,cAAC0J,EAAD,CACEvI,OAAQf,KAAK2E,MAAM5D,OACnBF,MAAOb,KAAK2E,MAAM9D,MAClBc,gBAAiB3B,KAAK2B,kBAExBjC,EAAAC,EAAAC,cAAC2J,EAAD,CACExI,OAAQf,KAAK2E,MAAM5D,OACnBgC,QAAS/C,KAAK+C,QACdU,WAAYzD,KAAKyD,WACjBG,WAAY5D,KAAK4D,WACjBwD,iBAAkBpH,KAAKoH,iBACvBzB,QAAS3F,KAAKT,MAAMmJ,MAAMD,OAAO9C,kBA9IzB7G,IAAMwB,WCDTkJ,EANE,kBACf9J,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wCCYW6J,EAVA,kBACb/J,EAAAC,EAAAC,cAAC8J,EAAA,EAAD,KACEhK,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,KACEjK,EAAAC,EAAAC,cAACgK,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIrI,UAAW7C,IACjCc,EAAAC,EAAAC,cAACgK,EAAA,EAAD,CAAOE,KAAK,kBAAkBrI,UAAW2G,IACzC1I,EAAAC,EAAAC,cAACgK,EAAA,EAAD,CAAOnI,UAAW+H,aCNxBO,iBAAOrK,EAAAC,EAAAC,cAACoK,EAAD,MAAYC,SAASC,cAAc","file":"static/js/main.5b4c6038.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component {\n  // Create empty ref. storeInput is as a property\n  storeInput = React.createRef();\n\n  static propTypes = {\n    history: PropTypes.object,\n  };\n\n  handleSubmit = e => {\n    // 1. Prevent the form from submitting\n    e.preventDefault();\n\n    // 2. Get input value\n    const storeName = this.storeInput.current.value;\n\n    // 3. change URL to whatever user entered\n    // Pushstate: Change URL without refreshing the page\n    // Get history props value from mama Router component\n    this.props.history.push(`/store/${storeName}`);\n  };\n\n  render() {\n    return (\n      <form action=\"\" className=\"store-selector\" onClick={this.handleSubmit}>\n        <h2>Please Enter A Store</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Enter a store name\"\n          ref={this.storeInput}\n          defaultValue={getFunName()}\n          required\n        />\n        <button type=\"submit\">Visit store →</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = props => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">of</span>\n        <span className=\"the\">the</span>\n      </span>\n      day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func,\n  };\n\n  renderOrder = id => {\n    const count = this.props.order[id];\n    const fish = this.props.fishes[id];\n    const isAvailable = fish && fish.status === 'available';\n    const transitionOptions = {\n      key: id,\n      timeout: { enter: 500, exit: 500 },\n      classNames: 'order',\n    };\n\n    if (!fish) return null; // If there's no fish, then null will return nothing (Make sure the fish is loaded)\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={id}>\n            Sorry, {fish ? fish.name : 'fish'} is no longer available!\n          </li>\n        </CSSTransition>\n      );\n    }\n\n    // Render should always \"return\" single element\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={id}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              {/* key={count}: Tell CSSTransition to make two span elements, ex. 2 -> out, 3 -> in */}\n              <CSSTransition\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n                classNames=\"count\"\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            <button onClick={() => this.props.removeFromOrder(id)}>\n              &times;\n            </button>\n          </span>\n          <span className=\"price\">{formatPrice(fish.price * count)}</span>\n        </li>\n      </CSSTransition>\n    );\n  };\n\n  render() {\n    const orderIDs = Object.keys(this.props.order);\n    const total = orderIDs.reduce((sum, id) => {\n      const count = this.props.order[id];\n      const fish = this.props.fishes[id];\n      const isAvailable = fish && fish.status === 'available'; // If there's a fish and is available\n\n      if (isAvailable) {\n        return sum + count * fish.price;\n      }\n\n      return sum;\n\n      // return isAvailable ? sum + count * fish.price : sum + 0;\n    }, 0);\n\n    return (\n      <div className=\"order-wrap\">\n        <h2>Your Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIDs.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          <strong>Total:</strong>\n          {formatPrice(total)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func,\n  };\n\n  createFish = e => {\n    e.preventDefault();\n\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    };\n\n    this.props.addFish(fish);\n\n    // Refresh the form\n    e.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select\n          name=\"status\"\n          ref={this.statusRef}\n          type=\"text\"\n          placeholder=\"Status\"\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Description\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image URL\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    id: PropTypes.string,\n    details: PropTypes.shape({\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      image: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    updateFish: PropTypes.func,\n    removeFish: PropTypes.func,\n  };\n\n  /**\n   * How to handling multiple inputs (ES6 computed property name)\n   * https://reactjs.org/docs/forms.html#handling-multiple-inputs\n   */\n  handleInputChange = e => {\n    const updatedFish = {\n      ...this.props.details, // Take a copy of current fish detail\n      [e.currentTarget.name]:\n        e.currentTarget.name === 'price'\n          ? parseFloat(e.currentTarget.value)\n          : e.currentTarget.value, // overwrite the one thing that changed\n    };\n\n    this.props.updateFish(this.props.id, updatedFish);\n  };\n\n  render() {\n    const { name, price, status, desc, image } = this.props.details;\n\n    return (\n      <div className=\"fish-edit\">\n        <input\n          name=\"name\"\n          type=\"text\"\n          value={name}\n          onChange={this.handleInputChange}\n        />\n        <input\n          name=\"price\"\n          type=\"text\"\n          value={price}\n          onChange={this.handleInputChange}\n        />\n        <select\n          name=\"status\"\n          type=\"text\"\n          value={status}\n          onChange={this.handleInputChange}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" value={desc} onChange={this.handleInputChange} />\n        <input\n          name=\"image\"\n          type=\"text\"\n          value={image}\n          onChange={this.handleInputChange}\n        />\n        <button onClick={() => this.props.removeFish(this.props.id)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = props => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button\n      className=\"github\"\n      onClick={() => props.authenticate('Github')}\n    >\n      Log in with Github\n    </button>\n    <button\n      className=\"twitter\"\n      onClick={() => props.authenticate('Twitter')}\n    >\n      Log in with Twitter\n    </button>\n    <button\n      className=\"facebook\"\n      onClick={() => props.authenticate('Facebook')}\n    >\n      Log in with Facebook\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import Rebase from 're-base';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\n// Initialize Firebase\nconst firebaseApp = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: \"react-seafood-dashboard.firebaseapp.com\",\n  databaseURL: \"https://react-seafood-dashboard.firebaseio.com\",\n});\n\n// Create Rebase binding\nconst base = Rebase.createClass(firebaseApp.database());\n\n// Named export\nexport { firebaseApp };\n\n// Default export\nexport default base;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    addFish: PropTypes.func,\n    updateFish: PropTypes.func,\n    removeFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n  };\n\n  state = {\n    uid: null,\n    owner: null,\n    isLoading: false,\n  };\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n\n    // Every time when refresh the page, set it to log the user in automatically.\n    // https://firebase.google.com/docs/auth/web/start?authuser=0\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.handleAuth({ user });\n      } else {\n        this.setState({ isLoading: false });\n      }\n    });\n  }\n\n  handleAuth = async authData => {\n    console.log(authData);\n\n    // 1. Look up the store data in Firebase\n    const store = await base.fetch(`${this.props.storeId}`, {\n      context: this,\n    });\n\n    // 2. Check if the store has owner in Firebase, if not set the new owner\n    if (!store.owner) {\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid,\n      });\n    }\n\n    // 3. Set the state of current log in user and store owner\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid,\n      isLoading: false,\n    });\n  };\n\n  /**\n   * Handle the sign-in flow with the Firebase\n   * https://firebase.google.com/docs/auth/web/github-auth?authuser=0\n   */\n  authenticate = provider => {\n    // Create an instance of the provider object\n    // ex. new firebase.auth.GithubAuthProvider();\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n\n    // Connect to the auth portion of firebase\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.handleAuth);\n  };\n\n  logOut = async () => {\n    await firebase.auth().signOut();\n\n    // Clear the state of current user id\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logOutButton = (\n      <button style={{ marginBottom: 20 }} onClick={this.logOut}>\n        Log out\n      </button>\n    );\n\n    // 0. Fix loggin buttons always load on the first screen. The page can't find uid immediately while Firebase Auth is still handling the sign-in flow.\n    if (this.state.isLoading) {\n      return (\n        <div className=\"loader-wrapper\">\n          <div className=\"loader\" />\n        </div>\n      );\n    }\n\n    // 1. Check if the user is not logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    // 2. Check if the current log in user is the store owner\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry, you are not the store owner.</p>\n          {logOutButton}\n        </div>\n      );\n    }\n\n    // 3. Otherwise, render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logOutButton}\n        {Object.keys(this.props.fishes).map(item => (\n          <EditFishForm\n            key={item}\n            id={item}\n            details={this.props.fishes[item]}\n            updateFish={this.props.updateFish}\n            removeFish={this.props.removeFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button className=\"load-sample\" onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n  // Use \"static\" to declare propTypes for all of the fish, everytime make a new fish will not duplicate it\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      desc: PropTypes.string,\n      name: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    addToOrder: PropTypes.func,\n  };\n\n  render() {\n    const { image, desc, name, price, status } = this.props.details;\n    const isAvailable = status === 'available';\n\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.id)}\n        >\n          {isAvailable ? 'Add to order' : 'Sold out!'}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport Fish from './Fish';\nimport sampleFishes from '../sample-fishes';\nimport base from '../base';\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {},\n  };\n\n  static propTypes = {\n    match: PropTypes.object,\n  };\n\n  /**\n   * Sync data between firebase and state when component is on the page\n   * https://github.com/tylermcginnis/re-base\n   */\n  componentDidMount() {\n    const { params } = this.props.match;\n    const localStorageValue = localStorage.getItem(params.storeId);\n\n    if (localStorageValue) {\n      this.setState({\n        order: JSON.parse(localStorageValue), // Turn string into object\n      });\n    }\n\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes',\n    });\n  }\n\n  componentDidUpdate() {\n    const { params } = this.props.match;\n\n    // Turn object into string\n    localStorage.setItem(params.storeId, JSON.stringify(this.state.order));\n  }\n\n  // Clean up when you left the store （memory leak）\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = fish => {\n    // Take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n\n    // Give every fish a unique id, and add new fish into fishes\n    fishes[`fish${Date.now()}`] = fish;\n\n    // Set the new fishes object to state\n    this.setState({\n      fishes, // Equal to fishes: fishes (es5)\n    });\n  };\n\n  updateFish = (id, updatedInfo) => {\n    // ES6 computed property name\n    const fishes = {\n      ...this.state.fishes,\n      [id]: updatedInfo,\n    };\n\n    // Same as above\n    // const fishes = { ...this.state.fishes };\n    // fishes[id] = fish;\n\n    this.setState({ fishes });\n  };\n\n  removeFish = id => {\n    const fishes = {\n      ...this.state.fishes,\n      [id]: null, // Set the fish i don't want to \"null\" not \"delete\" (Use \"null\" becoz there's weird thing on Firebase)\n    };\n\n    // Same as above\n    // const fishes = { ...this.state.fishes };\n    // fishes[id] = null;\n\n    this.setState({ fishes });\n\n    const order = { ...this.state.order };\n    delete order[id];\n    this.setState({ order });\n  };\n\n  addToOrder = id => {\n    // Take a copy of existing state\n    const order = { ...this.state.order };\n\n    // Default amount is 1, or update the amount in order\n    // ex. order.fish1 = order.fish1 + 1 || 1\n    // If order.fish1 exists, then increment by 1, if not, then return 1\n    order[id] = order[id] + 1 || 1;\n\n    // Set the new order object to state\n    this.setState({\n      order,\n    });\n  };\n\n  removeFromOrder = id => {\n    const order = { ...this.state.order };\n\n    delete order[id];\n    this.setState({ order });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({\n      fishes: sampleFishes,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"list-of-fishes\">\n            {/* Turn object keys into array then map over it */}\n            {Object.keys(this.state.fishes).map(item => (\n              <Fish\n                key={item}\n                id={item}\n                details={this.state.fishes[item]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          fishes={this.state.fishes}\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          removeFish={this.removeFish}\n          loadSampleFishes={this.loadSampleFishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h2>The page is not found :(</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}