{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","storeInput","React","createRef","handleSubmit","e","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","Fragment","action","className","onClick","this","type","placeholder","ref","defaultValue","required","Component","Header","tagline","Order","renderOrder","id","count","order","fish","fishes","isAvailable","status","transitionOptions","key","timeout","enter","exit","classNames","react_transition_group","component","name","removeFromOrder","price","_this2","orderIDs","Object","keys","total","reduce","sum","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","onSubmit","EditFishForm","handleInputChange","updatedFish","objectSpread","details","defineProperty","updateFish","_this$props$details","onChange","removeFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","process","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","handleAuth","_callee","authData","store","regenerator_default","wrap","_context","prev","next","console","log","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logOut","_callee2","_context2","signOut","onAuthStateChanged","_this3","logOutButton","item","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","src","alt","disabled","addToOrder","App","Date","now","updatedInfo","sampleFishes","params","match","localStorageValue","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.1ab04640.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component {\n  // Create empty ref. storeInput is as a property\n  storeInput = React.createRef();\n\n  static propTypes = {\n    history: PropTypes.object,\n  };\n\n  // If you want to access 'this' inside the custom method:\n  // Instead of declaring a method, we shold declare a property which is going to set the arrow function, then property will bound to the instance.\n  handleSubmit = e => {\n    // 1. Prevent the form from submitting\n    e.preventDefault();\n\n    // 2. Get input value\n    // console.log(this); // StorePicker component\n    const storeName = this.storeInput.current.value;\n\n    // 3. change URL to whatever user entered\n    // Pushstate: Change URL without refreshing the page\n    // Get history props value from mama Router component\n    // console.log(this.props.history);\n    this.props.history.push(`/store/${storeName}`);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <p>Dummy p tag for demo purpose only</p>\n        <form action=\"\" className=\"store-selector\" onClick={this.handleSubmit}>\n          {/* this is a demo comment */}\n          <h2>Please Enter A Store</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Enter a store name\"\n            ref={this.storeInput}\n            defaultValue={getFunName()}\n            required\n          />\n          <button type=\"submit\">Visit store →</button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default StorePicker;\n\n// NOTE\n/*\n1. render() return 只能回傳一個 parent，如果要多個 children 必須用 <React.Fragment> 或 <></ >包起來\n\nvia: React v16.2.0: Improved Support for Fragments\nhttps://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html\n*/\n\n/*\n2. comment 也不能馬上放在 return 之後，會出現 error，因為 return之後只能回傳一個 parent\n*/\n\n/*\n3. <input type=\"text\" value={getFunName()} />\n\"value\" 專門用在和 state 綁定資料的時候。\ninput 的預設顯示值要用 \"deaultValue\"，當 component mounts to the page，會執行 getFunName() 回傳商店名字；\n*/\n\n/*\n4. 如何取得 input value？\n\nReact 的準則是希望你不要用 selector 接觸到 DOM\n\n(1) ref：下面和樓上示範用 ref 取得 dom element\n(2) state：sync data between input value and state\n\n用 ref 要注意 this 會變成 undefined，只要是在 component 底下自己另外新建的 method，預設 this 都不會和 React.component 綁定。\n\n解法有以下幾種：\n(1) 如樓上原始碼 (比較推，設成 arrow function)\n(2) 建立 constructor，如下面的範例：\n裡頭使用 bind，讓 handleSubmit 裡的 this (原本顯示 undefined) 指向 StorePicker component。但萬一有很多 method 都要綁定，就要寫好幾個 bind 在 constructor 裡，較不建議使用。\n\nclass StorePicker extends React.Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // Create empty ref\n  storeInput = React.createRef();\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    // Get input value\n    console.log(this); // StorePicker component\n    console.log(this.storeInput);\n\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <p>Dummy p tag for demo purpose only</p>\n        <form action=\"\" className=\"store-selector\" onClick={this.handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Enter a store name\"\n            ref={this.storeInput}\n            defaultValue={getFunName()}\n            required\n          />\n          <button type=\"submit\">Visit store 👉</button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n*/\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = props => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">of</span>\n        <span className=\"the\">the</span>\n      </span>\n      day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired,\n};\n\nexport default Header;\n\n// NOTE\n// 如果 Component 只有一個 render() method，不需要建立一個 class，可以改寫成 Stateless Component\n// Stateless Component 的幾種寫法\n\n/*\n1. 傳統寫法\nfunction Header(props) {\n  return (\n    <header className=\"top\">\n      <h1>\n        Catch\n        <span className=\"ofThe\">\n          <span className=\"of\">of</span>\n          <span className=\"the\">the</span>\n        </span>\n        day\n      </h1>\n      <h3 className=\"tagline\">\n        <span>{props.tagline}</span>\n      </h3>\n    </header>\n  );\n}\n*/\n\n/*\n2. 存成變數\nconst Header = (props) => {\n  return (\n    <header className=\"top\">\n      <h1>\n        Catch\n        <span className=\"ofThe\">\n          <span className=\"of\">of</span>\n          <span className=\"the\">the</span>\n        </span>\n        day\n      </h1>\n      <h3 className=\"tagline\">\n        <span>{props.tagline}</span>\n      </h3>\n    </header>\n  )\n}\n*/\n\n/*\n3. 簡潔寫法：省略 {} 和 return (Implicit Return)\nconst Header = props => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">of</span>\n        <span className=\"the\">the</span>\n      </span>\n      day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n*/\n\n/*\n4. Destructuring 寫法: Destruct the props into its own variables\nconst Header = ({ tagline }) => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">of</span>\n        <span className=\"the\">the</span>\n      </span>\n      day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{tagline}</span>\n    </h3>\n  </header>\n)\n*/\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func,\n  };\n\n  renderOrder = id => {\n    const count = this.props.order[id];\n    const fish = this.props.fishes[id];\n    const isAvailable = fish && fish.status === 'available';\n    const transitionOptions = {\n      key: id,\n      timeout: { enter: 500, exit: 500 },\n      classNames: 'order',\n    };\n\n    if (!fish) return null; // If there's no fish, then null will return nothing (Make sure the fish is loaded)\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={id}>\n            Sorry, {fish ? fish.name : 'fish'} is no longer available!\n          </li>\n        </CSSTransition>\n      );\n    }\n\n    // Render should always \"return\" single element\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={id}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              {/* key={count}: Tell CSSTransition to make two span elements, ex. 2 -> out, 3 -> in */}\n              <CSSTransition\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n                classNames=\"count\"\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            <button onClick={() => this.props.removeFromOrder(id)}>\n              &times;\n            </button>\n          </span>\n          <span className=\"price\">{formatPrice(fish.price * count)}</span>\n        </li>\n      </CSSTransition>\n    );\n  };\n\n  render() {\n    const orderIDs = Object.keys(this.props.order);\n    const total = orderIDs.reduce((sum, id) => {\n      const count = this.props.order[id];\n      const fish = this.props.fishes[id];\n      const isAvailable = fish && fish.status === 'available'; // If there's a fish and is available\n\n      if (isAvailable) {\n        return sum + count * fish.price;\n      }\n\n      return sum;\n\n      // return isAvailable ? sum + count * fish.price : sum + 0;\n    }, 0);\n\n    return (\n      <div className=\"order-wrap\">\n        <h2>Your Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIDs.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          <strong>Total:</strong>\n          {formatPrice(total)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n\n// NOTE\n/*\n1. 如何使用 transition package？\n\nit only tracks \"enter\" and \"exit\" states for the\ncomponents.\n\n原本：\n<ul className=\"order\">\n  {orderIDs.map(this.renderOrder)}\n</ul>\n\n<ul> 改成用 <TransitionGroup> 包起來\n<TransitionGroup component=\"ul\" className=\"order\">\n  {orderIDs.map(this.renderOrder)}\n</TransitionGroup>\n\n<li> 外層再用 <CSSTransition> 包起來，這層主要是寫 css transition 的關鍵\n<CSSTransition {...transitionOptions}>\n  <li key={id}></li>\n</CSSTransition>\n\n*/\n\n/*\n2. <CSSTransition> 裡的 prop\n\n<CSSTransition\n  key={id}\n  timeout={{ enter: 500, exit: 500 }}\n  classNames=\"order\">\n    <li key={id}>Sorry, {fish ? fish.name : 'fish'} is no longer available!</li>\n</CSSTransition>;\n\n\n如果一模一樣的 prop 會重複在不同地方使用時，可以改寫成這樣\n↓↓↓\nconst transitionOptions = {\n  key: id,\n  timeout: { enter: 500, exit: 500 },\n  classNames: 'order',\n};\n\n <CSSTransition {...transitionOptions}></CSSTransition>\n*/\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func,\n  };\n\n  createFish = e => {\n    e.preventDefault();\n\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    };\n\n    this.props.addFish(fish);\n\n    // Refresh the form\n    e.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select\n          name=\"status\"\n          ref={this.statusRef}\n          type=\"text\"\n          placeholder=\"Status\"\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Description\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image URL\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    id: PropTypes.string,\n    details: PropTypes.shape({\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      image: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    updateFish: PropTypes.func,\n    removeFish: PropTypes.func,\n  };\n\n  /**\n   * How to handling multiple inputs (ES6 computed property name)\n   * https://reactjs.org/docs/forms.html#handling-multiple-inputs\n   */\n  handleInputChange = e => {\n    const updatedFish = {\n      ...this.props.details, // Take a copy of current fish detail\n      [e.currentTarget.name]:\n        e.currentTarget.name === 'price'\n          ? parseFloat(e.currentTarget.value)\n          : e.currentTarget.value, // overwrite the one thing that changed\n    };\n\n    this.props.updateFish(this.props.id, updatedFish);\n  };\n\n  render() {\n    const { name, price, status, desc, image } = this.props.details;\n\n    return (\n      <div className=\"fish-edit\">\n        <input\n          name=\"name\"\n          type=\"text\"\n          value={name}\n          onChange={this.handleInputChange}\n        />\n        <input\n          name=\"price\"\n          type=\"text\"\n          value={price}\n          onChange={this.handleInputChange}\n        />\n        <select\n          name=\"status\"\n          type=\"text\"\n          value={status}\n          onChange={this.handleInputChange}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" value={desc} onChange={this.handleInputChange} />\n        <input\n          name=\"image\"\n          type=\"text\"\n          value={image}\n          onChange={this.handleInputChange}\n        />\n        <button onClick={() => this.props.removeFish(this.props.id)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n\n// NOTE\n/*\n1. 想要將使用者輸入的值寫入 state，必須加上 \"onChange\" method，只有在 input 欄位加上 value 會無法寫入，log 會警告只能讀取無法修改，React 希望統一把 changing value 寫入 state 管理。\n\n2. 解析 handleInputChange\nconst fish = {\n  ...this.props.details,\n  [e.currentTarget.name]: e.currentTarget.value,\n}\n\n為了讓 \"updateFish\" method (in App.js) 可以直接將每隻魚的全部資訊直接寫入 state，樓上的 \"fish\" object 不只含有使用者更新的 input name 和 input value，另外也 copy details 所有欄位，讓最後 fish 會包含所有 input 欄位送給 state（如下）。\n\n{desc: \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\", image: \"/images/lobster.jpg\", name: \"Lobster YEAHs\", price: \"6400\", status: \"unavailable\"}\n\nfish = all input field and values + updated inputs\n\n*/\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = props => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button\n      className=\"github\"\n      onClick={() => props.authenticate('Github')}\n    >\n      Log in with Github\n    </button>\n    <button\n      className=\"twitter\"\n      onClick={() => props.authenticate('Twitter')}\n    >\n      Log in with Twitter\n    </button>\n    <button\n      className=\"facebook\"\n      onClick={() => props.authenticate('Facebook')}\n    >\n      Log in with Facebook\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import Rebase from 're-base';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\n// Initialize Firebase\nconst firebaseApp = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: \"react-seafood-dashboard.firebaseapp.com\",\n  databaseURL: \"https://react-seafood-dashboard.firebaseio.com\",\n});\n\n// Create Rebase binding\nconst base = Rebase.createClass(firebaseApp.database());\n\n// Named export\nexport { firebaseApp };\n\n// Default export\nexport default base;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    addFish: PropTypes.func,\n    updateFish: PropTypes.func,\n    removeFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n  };\n\n  state = {\n    uid: null,\n    owner: null,\n  };\n\n  componentDidMount() {\n    // Every time when refresh the page will automatically log the user in\n    // https://firebase.google.com/docs/auth/web/start?authuser=0\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.handleAuth({ user });\n      }\n    });\n  }\n\n  handleAuth = async authData => {\n    console.log(authData);\n\n    // 1. Look up the store data in Firebase\n    const store = await base.fetch(`${this.props.storeId}`, {\n      context: this,\n    });\n\n    // 2. Check if the store has owner in Firebase, if not set the new owner\n    if (!store.owner) {\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid,\n      });\n    }\n\n    // 3. Set the state of current log in user and store owner\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid,\n    });\n  };\n\n  /**\n   * Handle the sign-in flow with the Firebase\n   * https://firebase.google.com/docs/auth/web/github-auth?authuser=0\n   */\n  authenticate = provider => {\n    // Create an instance of the provider object\n    // ex. new firebase.auth.GithubAuthProvider();\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n\n    // Connect to the auth portion of firebase\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.handleAuth);\n  };\n\n  logOut = async () => {\n    await firebase.auth().signOut();\n\n    // Clear the state of current user id\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logOutButton = <button onClick={this.logOut}>Log out</button>;\n\n    // 1. Check if the user is not logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    // 2. Check if the current log in user is the store owner\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry, you are not the store owner.</p>\n          {logOutButton}\n        </div>\n      );\n    }\n\n    // 3. Otherwise, render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logOutButton}\n        {Object.keys(this.props.fishes).map(item => (\n          <EditFishForm\n            key={item}\n            id={item}\n            details={this.props.fishes[item]}\n            updateFish={this.props.updateFish}\n            removeFish={this.props.removeFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n  // Use \"static\" to declare propTypes for all of the fish, everytime make a new fish will not duplicate it\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      desc: PropTypes.string,\n      name: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    addToOrder: PropTypes.func,\n  }\n\n  render() {\n    const { image, desc, name, price, status } = this.props.details;\n    const isAvailable = status === 'available';\n\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        {/* The button will be disabled when the value is true --> the fish is unavailable */}\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.id)}\n        >\n          {isAvailable ? 'Add to order' : 'Sold out!'}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n\n// NOTE\n/*\n1. 和樓上用 Destructuring 寫法對照，底下用一般寫法取 props 的值 (較攏長麻煩)\n\nclass Fish extends React.Component {\n  render() {\n    return (\n      <li className=\"menu-fish\">\n        <img src={this.props.details.image} alt={this.props.details.name} />\n        <h3 className=\"fish-name\">{this.props.details.name}</h3>\n      </li>\n    );\n  }\n}\n*/\n\n/*\n2. addToOrder onClick button 可以另外拆出來寫成 method，或者如上頭原始碼寫成 inline （如果只有短短一行，寫成 inline 即可)\n\nclass Fish extends React.Component {\n  handleClick = () => {\n    this.props.addToOrder(this.props.no);\n  };\n\n  render() {\n    const { image, desc, name, price, status } = this.props.details;\n    const isAvailable = status === 'available';\n\n    return (\n      <li className=\"menu-fish\">\n        <button\n          disabled={!isAvailable}\n          onClick={this.handleClick}\n        >\n          {isAvailable ? 'Add to order' : 'Sold out'}\n        </button>\n      </li>\n    );\n  }\n}\n*/\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes'; // small case for \"sample\" becoz it's not a class\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {},\n  };\n\n  static propTypes = {\n    match: PropTypes.object,\n  };\n\n  /**\n   * Sync data between firebase and state when component is on the page\n   * https://github.com/tylermcginnis/re-base\n   */\n  componentDidMount() {\n    const { params } = this.props.match;\n\n    const localStorageValue = localStorage.getItem(params.storeId);\n\n    if (localStorageValue) {\n      this.setState({\n        order: JSON.parse(localStorageValue), // Turn string into object\n      });\n    }\n\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes',\n    });\n  }\n\n  componentDidUpdate() {\n    const { params } = this.props.match;\n\n    // Turn object into string\n    localStorage.setItem(params.storeId, JSON.stringify(this.state.order));\n  }\n\n  // Clean up when you left the store （memory leak）\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = fish => {\n    // Take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n\n    // Give every fish a unique id, and add new fish into fishes\n    fishes[`fish${Date.now()}`] = fish;\n\n    // Set the new fishes object to state\n    this.setState({\n      fishes, // fishes: fishes (es5)\n    });\n  };\n\n  updateFish = (id, updatedInfo) => {\n    // ES6 computed property name\n    const fishes = {\n      ...this.state.fishes,\n      [id]: updatedInfo,\n    };\n\n    // Same as above\n    // const fishes = { ...this.state.fishes };\n    // fishes[id] = fish;\n\n    this.setState({ fishes });\n  };\n\n  removeFish = id => {\n    const fishes = {\n      ...this.state.fishes,\n      [id]: null, // Set the fish i don't want to \"null\" not \"delete\" (Use \"null\" becoz there's weird thing on Firebase)\n    };\n\n    // Same as above\n    // const fishes = { ...this.state.fishes };\n    // fishes[id] = null;\n\n    this.setState({ fishes });\n\n    const order = { ...this.state.order };\n    delete order[id];\n    this.setState({ order });\n  };\n\n  addToOrder = id => {\n    // Take a copy of existing state\n    const order = { ...this.state.order };\n\n    // Default amount is 1 (add to the order), or update the amount in order\n    // ex. order.fish1 = order.fish1 + 1 || 1\n    // If order.fish1 exists, then increment by 1, if not, then return 1\n    order[id] = order[id] + 1 || 1;\n\n    // Set the new order object to state\n    this.setState({\n      order, // order: order (es5)\n    });\n  };\n\n  removeFromOrder = id => {\n    const order = { ...this.state.order };\n\n    delete order[id];\n    this.setState({ order });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({\n      fishes: sampleFishes,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"list-of-fishes\">\n            {/* Turn object keys into array then map over it */}\n            {Object.keys(this.state.fishes).map(item => (\n              <Fish\n                key={item}\n                id={item}\n                details={this.state.fishes[item]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          fishes={this.state.fishes}\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          removeFish={this.removeFish}\n          loadSampleFishes={this.loadSampleFishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// NOTE\n/*\n1. state 也可以寫在 constructor 裡面\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n\n    }\n  }\n}\n*/\n\n/*\n2. state 一定要給個空的預設初始值，在畫面還沒 mount 前用\nstate = {\n  fishes1 = \"\", // string\n  fishes2 = null, // number\n  fishes3 = [], // array\n  fishes4 = {}, // object\n}\n*/\n\n/*\n3. 傳遞好幾個 state 時，不想重複寫，可以寫成如下：\n<Order fishes={this.state.fishes} order={this.state.order} />\n\n也可以改用 Object Spread Operator，會自動把裡面所有的 object 抽取出來\n<Order {...this.state} />\n\n如果在 console 裡面看結果會長這樣，和自己一個一個寫是一樣的結果\n{fishes: {…}, order: {…}}\n\n但不建議使用，雖然可以很快速把 state 裡面所有 object 全部抽取出來，但不是每個 state 裡的內容都會需要用到。\n*/\n\n/*\n4. componentDidMount\n\n裡面會執行將 localstorage 和 firebase 的資料寫入 state。由於 localstorage 在本機執行速度很快，firebase 還需要和 rebase 或 firebase 連線才能寫入 state，可能延遲一兩秒之後才回來，導致 order 的資料已經有了，最重要的 fishes 資料還沒回來顯示在畫面上，於是出現 “TypeError: Cannot read property 'status' of undefined” (in Order.js file)\n\nconst isAvailable = fish.status === 'available'; --> 找不到 fish\n\n[解決方式]\n在 Order.js 加上以下就能解決\nconst isAvailable = fish && fish.status === 'available'; (當有 fish 時，而且狀態是 available)\n\n但產生另一個問題，當 fish 的資料還沒回傳來時，Order 裡會先閃一下 \"Sorry, fish is no longer available!\" ，等到 fish 的資料來了，才會顯示 Order 內容 (fish 名稱和數量)\n\n[解決方式]\n在 Order.js 加上這行\nif (!fish) return null;\n\n// If there's no fish, then null will return nothing (Make sure the fish is loaded)\n\n*/\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h2>The page is not found :(</h2>\n  </div>\n)\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n\n\n// NOTE\n\n// React 是由一堆 Component 組成，包括 router 也是，所以要另外建一支 Router Component\n\n// <Switch> 裡會由上而下試所有的 <Route>，如果第一個不成功，就試第二個，一旦完全沒有符合的就會跳到 NotFound 404 頁面\n\n// exact：path exactly match ./ (首頁), we want to render out the 'StorePicker' component\n\n// /store/:storeId ：任何接在 /store/ 後面的字眼網址 ex. http://localhost:3000/store/test123，都會 render 'App' component\n","import React from 'react';\n// import { Component } from 'react'; // 也可以這樣寫\nimport { render } from 'react-dom'; // {} means Cheery pick only the render method from 'react-dom' package\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}